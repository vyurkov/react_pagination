{"version":3,"sources":["components/Pagination/Pagination.tsx","App.tsx","utils.ts","index.tsx"],"names":["Pagination","total","perPage","currentPage","onPageChange","pages","Math","ceil","className","href","onClick","Array","from","keys","map","i","currenItem","items","to","numbers","n","push","getNumbers","App","useState","page","onPerPageChange","startPosition","endPosition","min","length","id","value","onChange","event","Number","target","htmlFor","ReactDOM","render","document","getElementById"],"mappings":"4KAOaA,EAAa,SAAC,GAKb,IAJZC,EAIW,EAJXA,MACAC,EAGW,EAHXA,QACAC,EAEW,EAFXA,YACAC,EACW,EADXA,aAEMC,EAAQC,KAAKC,KAAKN,EAAQC,GAEhC,OACE,qCACE,qBAAIM,UAAU,aAAd,UACE,oBAAIA,UAAS,oBAA+B,IAAhBL,GAAqB,YAAjD,SACE,mBACE,UAAQ,WACRK,UAAU,YACVC,KAAK,QACL,gBAA+B,IAAhBN,EACfO,QAAS,kBAAMP,EAAc,GAAKC,EAAaD,EAAc,IAL/D,oBAUDQ,MAAMC,KAAKD,MAAMN,GAAOQ,QAAQC,KAAI,SAAAC,GACnC,OACE,oBACEP,UAAS,oBAAeO,EAAI,IAAMZ,GAAe,UADnD,SAIE,mBACE,UAAQ,WACRK,UAAU,YACVC,KAAI,WAAMM,EAAI,GACdL,QAAS,kBAAMN,EAAaW,EAAI,IAJlC,SAMGA,EAAI,KARFA,EAAI,MAaf,oBAAIP,UAAS,oBAAeL,IAAgBE,GAAS,YAArD,SACE,mBACE,UAAQ,WACRG,UAAU,YACVC,KAAK,QACL,gBAAeN,IAAgBE,EAC/BK,QAAS,kBAAMP,EAAcE,GAASD,EAAaD,EAAc,IALnE,uBAWJ,6BACGQ,MAAMC,KAAKD,MAAMT,GAASW,QAAQC,KAAI,SAAAC,GACrC,IAAMC,EAAcb,EAAcD,EAAYA,GAAYa,EAAI,GAE9D,OAAIC,GAAcf,EAEd,oBAAI,UAAQ,OAAZ,wBACWe,IADaD,EAAI,GAMzB,YCjEjB,IAAME,ECLC,SAAoBL,EAAcM,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIR,EAAMQ,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,EDFKG,CAAW,EAAG,IACzBR,KAAI,SAAAM,GAAC,qBAAYA,MAEPG,EAAgB,WAC3B,MAA6BC,mBAAS,GAAtC,mBAAOC,EAAP,KAAarB,EAAb,KACA,EAAmCoB,mBAAS,GAA5C,mBAAOtB,EAAP,KAAgBwB,EAAhB,KACMC,EAAiBF,EAAOvB,GAAYA,EAAU,GAC9C0B,EAActB,KAAKuB,IAAIF,GAAiBzB,EAAU,GAAIe,EAAMa,QAElE,OACE,sBAAKtB,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWiB,EADX,mBAC0BE,EAD1B,cAC6CC,EAD7C,eAC+DX,EAAMa,OADrE,OAIA,sBAAKtB,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACRuB,GAAG,kBACHvB,UAAU,eACVwB,MAAO9B,EACP+B,SAAU,SAAAC,GACRR,EAAgBS,OAAOD,EAAME,OAAOJ,QACpC5B,EAAa,IAPjB,UAUE,wBAAQ4B,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOK,QAAQ,kBAAkB7B,UAAU,qBAA3C,+BAIF,cAAC,EAAD,CACEP,MAAOgB,EAAMa,OACb5B,QAASA,EACTC,YAAasB,EACbrB,aAAcA,QE9CtBkC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,U","file":"static/js/main.a9e07300.chunk.js","sourcesContent":["type Props = {\n  total: number,\n  perPage: number,\n  currentPage: number,\n  onPageChange: (page: number) => void,\n};\n\nexport const Pagination = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}: Props) => {\n  const pages = Math.ceil(total / perPage);\n\n  return (\n    <>\n      <ul className=\"pagination\">\n        <li className={`page-item ${currentPage === 1 && 'disabled'}`}>\n          <a\n            data-cy=\"prevLink\"\n            className=\"page-link\"\n            href=\"#prev\"\n            aria-disabled={currentPage === 1}\n            onClick={() => currentPage > 1 && onPageChange(currentPage - 1)}\n          >\n            «\n          </a>\n        </li>\n        {Array.from(Array(pages).keys()).map(i => {\n          return (\n            <li\n              className={`page-item ${i + 1 === currentPage && 'active'}`}\n              key={i + 1}\n            >\n              <a\n                data-cy=\"pageLink\"\n                className=\"page-link\"\n                href={`#${i + 1}`}\n                onClick={() => onPageChange(i + 1)}\n              >\n                {i + 1}\n              </a>\n            </li>\n          );\n        })}\n        <li className={`page-item ${currentPage === pages && 'disabled'}`}>\n          <a\n            data-cy=\"nextLink\"\n            className=\"page-link\"\n            href=\"#next\"\n            aria-disabled={currentPage === pages}\n            onClick={() => currentPage < pages && onPageChange(currentPage + 1)}\n          >\n            »\n          </a>\n        </li>\n      </ul>\n      <ul>\n        {Array.from(Array(perPage).keys()).map(i => {\n          const currenItem = (currentPage * perPage) - (perPage) + (i + 1);\n\n          if (currenItem <= total) {\n            return (\n              <li data-cy=\"item\" key={i + 1}>\n                {`Item ${currenItem}`}\n              </li>\n            );\n          }\n\n          return '';\n        })}\n      </ul>\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { Pagination } from './components/Pagination';\nimport { getNumbers } from './utils';\n\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [page, onPageChange] = useState(1);\n  const [perPage, onPerPageChange] = useState(5);\n  const startPosition = (page * perPage) - (perPage - 1);\n  const endPosition = Math.min(startPosition + (perPage - 1), items.length);\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${page} (items ${startPosition} - ${endPosition} of ${items.length})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={perPage}\n            onChange={event => {\n              onPerPageChange(Number(event.target.value));\n              onPageChange(1);\n            }}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n      <Pagination\n        total={items.length}\n        perPage={perPage}\n        currentPage={page}\n        onPageChange={onPageChange}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}